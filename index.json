[{"content":"In 1997, a sci-fi horror film by the name of \u0026lsquo;Event Horizon\u0026rsquo; found its way into the cinemas. Directed by Paul W. S. Anderson, the film features an ensemble cast including Laurence Fishburne, Sam Neill, Kathleen Quinlan, and Joely Richardson, among others.\nThe cast of Event Horizon\nThe narrative focuses on a crew aboard the rescue vessel Lewis and Clark, sent to investigate the reappearance of the Event Horizon, a ship that had mysteriously vanished seven years prior. Once they board the ghost ship, however, the crew begins to experience horrific hallucinations and realize they\u0026rsquo;ve discovered something far more terrifying than they could have imagined.\nThe mysterious ship Event Horizon\n\u0026lsquo;Event Horizon\u0026rsquo; is a mesh of dark, gripping horror and complex, thought-provoking science fiction. It\u0026rsquo;s a film that asks its viewers to confront the unknown and ponder the vast, often terrifying, possibilities of space and the human mind.\nFor more details about \u0026lsquo;Event Horizon,\u0026rsquo; you can visit its IMDb page.\nIMDb poster of Event Horizon\n","permalink":"https://mikeei.github.io/blog/post_001/","summary":"In 1997, a sci-fi horror film by the name of \u0026lsquo;Event Horizon\u0026rsquo; found its way into the cinemas. Directed by Paul W. S. Anderson, the film features an ensemble cast including Laurence Fishburne, Sam Neill, Kathleen Quinlan, and Joely Richardson, among others.\nThe cast of Event Horizon\nThe narrative focuses on a crew aboard the rescue vessel Lewis and Clark, sent to investigate the reappearance of the Event Horizon, a ship that had mysteriously vanished seven years prior.","title":"Event Horizon: A Deep Dive Into the Unknown"},{"content":"Back in 1986, James Cameron released \u0026lsquo;Aliens,\u0026rsquo; the much-anticipated sequel to Ridley Scott\u0026rsquo;s 1979 film \u0026lsquo;Alien.\u0026rsquo; Drawing upon the original\u0026rsquo;s raw, heart-pounding horror, \u0026lsquo;Aliens\u0026rsquo; combined it with Cameron\u0026rsquo;s signature knack for action to create an unforgettable cinematic experience.\nAliens in action\nStarring Sigourney Weaver reprising her role as Ellen Ripley, \u0026lsquo;Aliens\u0026rsquo; follows our resilient heroine as she is awakened 57 years after narrowly escaping the predatory Alien in the first film. Convinced to join a mission to check on a colony of humans on the Exomoon LV-426, where the crew of the Nostromo first encountered the Alien eggs, Ripley finds herself once again in the midst of a nightmare.\nRipley, prepared for battle\n\u0026lsquo;Aliens\u0026rsquo; thrives on its ability to build suspense and deliver gut-wrenching action sequences. Each scene is meticulously crafted to ratchet up the tension, leading to a nail-biting finale that cements Ripley\u0026rsquo;s status as one of cinema\u0026rsquo;s greatest action heroes.\nAn intense scene from Aliens\nWhat truly sets \u0026lsquo;Aliens\u0026rsquo; apart, however, is its deeper exploration of Ripley\u0026rsquo;s character. Despite the ceaseless action and horror, the film finds time to delve into Ripley\u0026rsquo;s psyche, offering a poignant look at her struggle with PTSD from her previous encounter with the Alien and the maternal bond she forms with a young girl named Newt.\nRipley and Newt form a powerful bond\n\u0026lsquo;Aliens\u0026rsquo; is more than just a sequel. It is a masterclass in filmmaking that seamlessly blends sci-fi, horror, and action into a compelling narrative that sticks with you long after the credits roll.\nFor more details about \u0026lsquo;Aliens,\u0026rsquo; you can visit its IMDb page.\nIMDb poster of Aliens\n","permalink":"https://mikeei.github.io/blog/post_002/","summary":"Back in 1986, James Cameron released \u0026lsquo;Aliens,\u0026rsquo; the much-anticipated sequel to Ridley Scott\u0026rsquo;s 1979 film \u0026lsquo;Alien.\u0026rsquo; Drawing upon the original\u0026rsquo;s raw, heart-pounding horror, \u0026lsquo;Aliens\u0026rsquo; combined it with Cameron\u0026rsquo;s signature knack for action to create an unforgettable cinematic experience.\nAliens in action\nStarring Sigourney Weaver reprising her role as Ellen Ripley, \u0026lsquo;Aliens\u0026rsquo; follows our resilient heroine as she is awakened 57 years after narrowly escaping the predatory Alien in the first film.","title":"Aliens: An Unforgettable Sci-Fi Horror Sequel"},{"content":"In 1997, fans of the Alien franchise were treated to a new addition to the saga: \u0026lsquo;Alien: Resurrection.\u0026rsquo; Directed by French filmmaker Jean-Pierre Jeunet, the film dared to tread new ground with its unique blend of horror, action, and dark humor.\nAlien: Resurrection in action\nTwo hundred years after the events of \u0026lsquo;Alien 3,\u0026rsquo; \u0026lsquo;Alien: Resurrection\u0026rsquo; sees the return of Ellen Ripley (Sigourney Weaver), who is brought back to life as a human-Alien hybrid clone through a successful scientific experiment. Alongside her, a group of mercenaries find themselves aboard the Auriga, where they must fight for survival against a new generation of Xenomorphs.\nRipley, reborn and stronger than ever\nDespite its divergence from the earlier films\u0026rsquo; tones, \u0026lsquo;Alien: Resurrection\u0026rsquo; contains numerous scenes that hark back to the franchise\u0026rsquo;s horror roots. There are suspenseful chase scenes, claustrophobic settings, and gruesome alien encounters that will satisfy longtime fans.\nAn intense scene from Alien: Resurrection\nOne of the movie\u0026rsquo;s key elements is its exploration of Ripley\u0026rsquo;s character. As a clone, she possesses enhanced strength and reflexes, and an empathic link with the Aliens. Her struggle with her identity and humanity adds an intriguing layer to the narrative.\nRipley shares a complex relationship with the Aliens\n\u0026lsquo;Alien: Resurrection\u0026rsquo; is a film that takes risks, breathing new life into the franchise with its distinct style and narrative choices. Despite the mixed reviews, the movie has found its audience among those who appreciate its dark humor and unique take on the series\u0026rsquo; lore.\nFor more details about \u0026lsquo;Alien: Resurrection,\u0026rsquo; you can visit its IMDb page.\nIMDb poster of Alien: Resurrection\n","permalink":"https://mikeei.github.io/blog/post_003/","summary":"In 1997, fans of the Alien franchise were treated to a new addition to the saga: \u0026lsquo;Alien: Resurrection.\u0026rsquo; Directed by French filmmaker Jean-Pierre Jeunet, the film dared to tread new ground with its unique blend of horror, action, and dark humor.\nAlien: Resurrection in action\nTwo hundred years after the events of \u0026lsquo;Alien 3,\u0026rsquo; \u0026lsquo;Alien: Resurrection\u0026rsquo; sees the return of Ellen Ripley (Sigourney Weaver), who is brought back to life as a human-Alien hybrid clone through a successful scientific experiment.","title":"Alien: Resurrection - Reinventing The Horror"},{"content":"With four gripping films in the Alien franchise, fans around the world have been speculating and hoping for an \u0026lsquo;Alien 5.\u0026rsquo; As of now, the film exists only in the realm of imagination, but that won\u0026rsquo;t stop us from exploring its potential.\nThe imagined Alien 5 in action\nIf \u0026lsquo;Alien 5\u0026rsquo; were to come to fruition, there\u0026rsquo;s no telling where the story could go. One possibility is the return of Ellen Ripley (Sigourney Weaver) in some form, continuing the trend set by \u0026lsquo;Alien: Resurrection.\u0026rsquo; With her complex relationship with the Xenomorphs, Ripley\u0026rsquo;s involvement would ensure a compelling narrative.\nImagined Ripley in Alien 5\nThe film could also delve deeper into the Xenomorphs\u0026rsquo; origins and their home world, a concept touched upon in \u0026lsquo;Prometheus\u0026rsquo; and \u0026lsquo;Alien: Covenant.\u0026rsquo; This exploration could provide a fresh perspective on the aliens and the franchise as a whole.\nThe imagined home world of the Xenomorphs\nA new installment could mean new characters and dynamics as well. This could introduce a whole new generation of fans to the horrors and excitement of the Alien universe.\nNew faces in the imagined Alien 5\nWhile \u0026lsquo;Alien 5\u0026rsquo; remains speculative, the enduring popularity of the franchise assures that the desire for more content isn\u0026rsquo;t going away anytime soon. We can only hope that our speculations align with what\u0026rsquo;s to come.\nImagined IMDb poster of Alien 5\n","permalink":"https://mikeei.github.io/blog/post_004/","summary":"With four gripping films in the Alien franchise, fans around the world have been speculating and hoping for an \u0026lsquo;Alien 5.\u0026rsquo; As of now, the film exists only in the realm of imagination, but that won\u0026rsquo;t stop us from exploring its potential.\nThe imagined Alien 5 in action\nIf \u0026lsquo;Alien 5\u0026rsquo; were to come to fruition, there\u0026rsquo;s no telling where the story could go. One possibility is the return of Ellen Ripley (Sigourney Weaver) in some form, continuing the trend set by \u0026lsquo;Alien: Resurrection.","title":"Alien 5: The Next Chapter in Extraterrestrial Horror"},{"content":"CSS, short for Cascading Style Sheets, is a style sheet language used for describing the look and formatting of a document written in HTML. From typography to layout, CSS is a fundamental tool for web development.\nCSS: Making the web beautiful\nCSS\u0026rsquo;s main benefit is that it allows developers to separate the website\u0026rsquo;s content (HTML) from its presentation (CSS). This separation can improve content accessibility, provide more flexibility and control in the specification of presentation characteristics, and reduce complexity and repetition in the structural content.\nThe symbiotic relationship between HTML and CSS\nOne of CSS\u0026rsquo;s core features is the ability to control the layout of multiple web pages all at once. By changing one CSS file, you can modify the look of an entire website. This ability makes CSS an incredibly efficient tool for maintaining large sites.\nCSS at work, styling multiple pages at once\nCSS is also responsive, which means it can ensure that web pages look good on devices of all sizes. With features like media queries, you can create different layouts for different screen sizes.\nResponsive design with CSS\nIn conclusion, CSS is a crucial part of web development that allows developers to create visually engaging and efficient websites. Whether you\u0026rsquo;re just starting your web development journey or you\u0026rsquo;re a seasoned developer, a solid understanding of CSS is essential.\nWriting CSS code for a website\n","permalink":"https://mikeei.github.io/blog/post_006/","summary":"CSS, short for Cascading Style Sheets, is a style sheet language used for describing the look and formatting of a document written in HTML. From typography to layout, CSS is a fundamental tool for web development.\nCSS: Making the web beautiful\nCSS\u0026rsquo;s main benefit is that it allows developers to separate the website\u0026rsquo;s content (HTML) from its presentation (CSS). This separation can improve content accessibility, provide more flexibility and control in the specification of presentation characteristics, and reduce complexity and repetition in the structural content.","title":"CSS: Styling the Web"},{"content":" Make Your Own PCBs with a 3D Printer Conceived on Feb 14, 2020\nSeries: sideprojects, cad, hardware\nListen, anyone can make a PCB at home, it’s easy. All you need is a laser printer, some glossy magazine pages, print your circuit onto the page, use a clothes iron to transfer the toner onto your copper clad, if that doesn’t work use some water and some lacquer or something, I don’t know, I stopped reading at that point because the last time I saw a laser printer, a magazine and a clothes iron was in the nineties.\nUntil recently, the only ways I knew to make PCBs was to practice the dark art above, to pay $10 and wait three weeks to get professional-looking PCBs from China, or to pay $60 and wait three days to get professional-looking PCBs from Europe. It was “cheap, fast, actually doable by a human person, choose two”.\nThat always bugged me, it shouldn’t be like that, I have always been of the opinion that there shouldn’t be things you can’t make when you have a 3D printer, but PCBs have consistently eluded me. I yearned for them, I wanted to be able to make them at home, but it seemed impossible.\nOne day, everything changed.\nThat One Day When Everything Changed One day, I thought it would be fun to mount a pen onto my 3D printer and got it to draw stuff on paper. If you don’t know how a 3D printer works, now would be a good time to skim my 3D printer primer, but in summary a 3D printer cuts an object into 2D slices and prints them on top of each other.\nIf I could take just one of these slices and tell the printer to print higher, then the nozzle wouldn’t be touching the bed, I could mount the pen lower and put a piece of paper under it, and it would draw on the paper. Getting the printing software (called a slicer) to create a 3-dimensional shape out of a photo was easy, as you can just import a drawing and it will automatically convert it to a solid.\nI rubber-banded a Sharpie onto a holder I quickly designed, and, a few lines of code later, my printer produced this gem (excuse quality of potato):\nI felt so proud of the completely useless thing I had created, I immediately ran to share it everywhere. A friend saw it on Twitter and replied that this was a good way to make PCBs.\nI was immediately intrigued.\nMaking PCBs with Markers Apparently, all that black magic about printing and transferring and magazines and lacquer above is just a way to keep the etching acid from dissolving the copper. You see, when you’re etching a PCB, you’re basically getting acid to dissolve the copper on your copper clad (the blank PCB). Except, you’re putting something (toner) over the copper on the parts you want to keep, so the acid can’t get to it, which leaves you with copper traces.\nIt turns out you don’t really need to do all that stuff with the toner and printer, since you can cover the copper much more easily just by drawing over it with a permanent, waterproof marker (I used an Edding 140 S 0.3mm). I had inadvertently created a plotter, which can be used for painting a circuit onto a PCB.\nI rushed to dig out the files for one of my old, small PCBs, which you can see on the right, and ran it through my improved drawing process. I had the printer draw it on paper, just to see what it would end up looking like, and the results were pretty encouraging.\nThe paper somewhat absorbed the ink, as paper is wont to do, so there was some seepage, but overall the results looked like they should definitely work on copper. This is that first attempt:\nThis looked very promising.\nThe Improved Drawing Process The original process (where I exported stuff to an image and then converted the image to a 3D model with the slicer) worked well enough, but it was meant for working with 3D models, not circuits. As such, it could sometimes lose accuracy, which doesn’t really matter if you’re printing a figurine, but does matter if it means your circuit is no longer working.\nFortunately, there is an excellent open source project called pcb2gcode, which converts Gerber files to Gcode for various CAD tools to execute it. The Gcode that pcb2gcode outputs wasn’t compatible with my Marlin-style printer, so I adapted my script from above to turn the output to something my printer can run.\nMy script does various things:\nIt removes commands that are incompatible with or unsafe to run on my printer (e.g. drilling commands, as it has no drill, temperature and extrusion commands, as I don’t want it to heat up or extrude, etc). It rewrites comments so that they are compatible with my printer (pcb2gcode comments use parentheses, my printer uses semicolons). It makes sure all movements are within some specified coordinates, so the print head can’t go too low or too high by mistake. It allows me to offset all drawing commands by some distance, so I can print exactly where I want to. Unfortunately, as you can see on the photo of the paper drawing above, pcb2gcode has a bug where traces that are too narrow disappear, but the author is actively working on it and I worked around it in the mean time just by setting a lower marker tip diameter.\nOnce everything was done on the programming side, and with lots of help from my friend Andrew, it was time to actually try and draw on copper. Here’s a video of the attempt:\n[Drawing a PCB on Copper Clad Video Link]\nEtching Surprisingly (and as my friend Josh rubbed in with what I imagine to be considerable glee), the actual etching part wasn’t as easy as I thought. It wasn’t hard, but it also didn’t consist of just throwing the PCB in acid and waiting.\nI’m still in a trial-and-error phase, as I’ve only etched two PCBs, but it seems like 100 grams of water with the appropriate amount of sodium persulfate dissolved in it is only good enough to etch a tiny PCB. If that’s true, it will take a lot of acid to etch a larger one, but I’ll have to experiment and see what happens.\nUPDATE: Some commenters on HN pointed out that the reason this took so long was that I didn’t have a copper plane. I decided against that\n","permalink":"https://mikeei.github.io/blog/blog_post_2023_07_10_2/","summary":"Make Your Own PCBs with a 3D Printer Conceived on Feb 14, 2020\nSeries: sideprojects, cad, hardware\nListen, anyone can make a PCB at home, it’s easy. All you need is a laser printer, some glossy magazine pages, print your circuit onto the page, use a clothes iron to transfer the toner onto your copper clad, if that doesn’t work use some water and some lacquer or something, I don’t know, I stopped reading at that point because the last time I saw a laser printer, a magazine and a clothes iron was in the nineties.","title":"Make Your Own PCBs with a 3D Printer"},{"content":" Why We Replaced Firecracker with QEMU July 10, 2023\nHugo Dutka\nCo-founder at Hocus\nFirecracker, the microVM hypervisor, is renowned for being lightweight, fast, and secure. It\u0026rsquo;s excellent for running short-lived workloads, which is why it\u0026rsquo;s the backbone of AWS Lambda. Our initial prototype for Hocus, a self-hosted alternative to Gitpod and GitHub Codespaces, utilized Firecracker. However, after weeks of testing, we decided to entirely replace it with QEMU. A little-known fact about Firecracker is its lack of support for many modern hypervisor features, such as dynamic RAM management, which is vital for long-lived workloads. In this post, I will explain why Firecracker might not be the best hypervisor choice and when you should avoid it.\nFirecracker Optimizes for Short-Lived Workloads The creators of Firecracker state that:\n\u0026ldquo;Firecracker has a minimalist design. It excludes unnecessary devices and guest-facing functionality to reduce the memory footprint and attack surface area of each microVM.\u0026rdquo;\nThe term \u0026ldquo;unnecessary\u0026rdquo; is intriguing - if this functionality is unnecessary, why was it incorporated into other hypervisors? The definition of \u0026ldquo;unnecessary\u0026rdquo; must be understood in the context of what Firecracker was built for. These excluded features are unnecessary for AWS Lambda, which spins up VMs to run short function calls and then shuts them down. If you\u0026rsquo;re running a different kind of workload, like a VM that contains your development environment or a self-hosted GitHub Actions agent, these features cease to be unnecessary. Your VM will run for hours, days, or even months without stopping, unlike the typical Firecracker VM, which runs for seconds or minutes.\nFirecracker, Not So Lightweight After All Here are the two most significant features Firecracker lacks:\nDynamic memory management - Firecracker\u0026rsquo;s RAM footprint starts low, but once a workload inside allocates RAM, Firecracker will never return it to the host system. After running several workloads inside, you end up with an idling VM that consumes 32 GB of RAM on the host, even though it doesn\u0026rsquo;t need any of it. Discard operations on storage - if you create a 10 GB file inside a VM and then delete it, the backing space won\u0026rsquo;t be reclaimed on the host. The VM will occupy that disk space until you delete the entire VM drive. These deficiencies make Firecracker a memory and disk space hog. The plot below shows the memory usage of the same memory-intensive workload running in QEMU and Firecracker virtual machines.\nThe workload in Firecracker finishes running around the 200-second mark, and in QEMU around the 250-second mark. It\u0026rsquo;s not a performance difference; it\u0026rsquo;s just when I manually stopped them.\nOther Features Firecracker Is Missing GPU support - if you need a GPU inside the VM, you have to pick a different hypervisor. High-performance disk IO - when you connect multiple drives to the VM and run intensive IO operations, you will likely run into a bottleneck. Firecracker uses a virtio-blk implementation that isn’t as memory-hungry as alternatives, but has a smaller throughput. QEMU is Not Perfect Though The main issue we\u0026rsquo;ve had with QEMU is that it has too many options you need to configure. For instance, enabling your VM to return unused RAM to the host requires at least three challenging tasks:\nKnowing that the feature even exists (it\u0026rsquo;s called free page reporting and you have to specifically enable it in QEMU) Understanding that an obscure feature of Linux called DAMON exists, knowing what it\u0026rsquo;s for, knowing how to configure it, and compiling a guest Linux kernel that supports it Knowing that you need to disable transparent huge pages on the guest, otherwise the VM will never return large amounts of memory It took us two months of experimentation, reading through the source code of Firecracker, QEMU, and other hypervisors to develop a reliable QEMU proof of concept. To comprehend DAMON configuration, my co-founder spent days running benchmarks and conversing with one of its authors. It\u0026rsquo;s great that we could talk and we are grateful that the author spent the time to help us, but it shows that the technology is not easily accessible yet.\nConclusion QEMU has the features you need to run general-purpose workloads, but configuring it requires a lot of time and patience. If you want to run short-lived, untrusted workloads, Firecracker is a great choice. However, if you just want to run your development environment in a VM, you can use Hocus. We\u0026rsquo;ve done all the hard work for you already. It\u0026rsquo;s still in alpha, but you can already check it out on GitHub.\nTags: qemu, firecracker\n","permalink":"https://mikeei.github.io/blog/blog_post_2023_07_10/","summary":"Why We Replaced Firecracker with QEMU July 10, 2023\nHugo Dutka\nCo-founder at Hocus\nFirecracker, the microVM hypervisor, is renowned for being lightweight, fast, and secure. It\u0026rsquo;s excellent for running short-lived workloads, which is why it\u0026rsquo;s the backbone of AWS Lambda. Our initial prototype for Hocus, a self-hosted alternative to Gitpod and GitHub Codespaces, utilized Firecracker. However, after weeks of testing, we decided to entirely replace it with QEMU. A little-known fact about Firecracker is its lack of support for many modern hypervisor features, such as dynamic RAM management, which is vital for long-lived workloads.","title":"Why We Replaced Firecracker with QEMU"},{"content":"Hugo: The Speedy Static Site Generator Hugo is an open-source static site generator that provides a robust framework for creating and managing websites. Its main benefit is speed; it can generate pages in milliseconds, allowing you to quickly see changes and build your site faster.\nTable of Contents Why Choose Hugo? Installation Getting Started with Hugo Customizing Your Site Deploying Your Site Why Choose Hugo? With many static site generators available, you might wonder, why choose Hugo? Here are a few reasons:\nSpeed: Hugo takes pride in being one of the fastest static site generators. Flexibility: Hugo supports a wide range of site configurations and themes. Ease of Use: It uses a simple directory structure and does not require a lot of technical expertise. Feature Description Speed Pages generate in milliseconds. Flexibility Supports a wide range of site configurations and themes. Ease of Use Uses a simple directory structure. Installation Before we dive into the process of creating a site with Hugo, you need to install it on your computer. Follow these steps:\nWindows Users: Download the latest release from the Hugo releases page on GitHub. Mac Users: Use Homebrew by typing brew install hugo in your Terminal. Linux Users: Use the Snap package manager by typing sudo snap install hugo in the Terminal. Getting Started with Hugo Now that you have Hugo installed, let\u0026rsquo;s start building our website!\nCreate a new site: Use the command hugo new site [site_name] where [site_name] is the name of your website. This will create a new directory with your site name. Navigate to your new site directory: Use the command cd [site_name] to move into your new site directory. Add a theme: Visit the Hugo themes directory, select a theme you like, and follow the instructions to add it to your site. At this point, you have a basic Hugo site with a theme ready to go!\nCustomizing Your Site Customizing your site is where the real fun begins. Here\u0026rsquo;s how you can add content and customize your site:\nAdd new content: Use the command hugo new [section]/[your_filename].md to create new content. For example, hugo new posts/my-first-post.md. Customize the layout: You can customize the layout of your site by modifying the theme files in the layouts directory. Customize the look: Modify the CSS files in the static/css directory to change the look of your site. Remember, every change you make can be viewed instantly because of Hugo\u0026rsquo;s speed!\nDeploying Your Site Once your site is ready, you can deploy it using various methods such as GitHub Pages, Netlify, or even your own custom server.\nHere\u0026rsquo;s a simple way to deploy your site using GitHub Pages:\nCreate a new repository: Create a new repository on GitHub. Initialize your site directory as a Git repository: Use the command git init. Add your site\u0026rsquo;s files to the Git repository: Use git add . and then git commit -m \u0026quot;first commit\u0026quot;. Push your site\u0026rsquo;s files to your GitHub repository: Use git remote add origin [your_repository_url] and then git push -u origin master. Voila! Your site is now live and can be accessed at https://[your_github_username].github.io/[your_repository_name].\nIn conclusion, Hugo is a powerful tool for creating fast, customizable static websites. It\u0026rsquo;s an excellent choice for blogs, portfolios, and other types of websites. Happy coding!\n","permalink":"https://mikeei.github.io/blog/blog_post_2023_07_09/","summary":"Hugo: The Speedy Static Site Generator Hugo is an open-source static site generator that provides a robust framework for creating and managing websites. Its main benefit is speed; it can generate pages in milliseconds, allowing you to quickly see changes and build your site faster.\nTable of Contents Why Choose Hugo? Installation Getting Started with Hugo Customizing Your Site Deploying Your Site Why Choose Hugo? With many static site generators available, you might wonder, why choose Hugo?","title":"Hugo: The Speedy Static Site Generator"},{"content":"Unleashing the Power of PHP 8.1: A Comprehensive Guide PHP 8.1, the latest iteration of the PHP language, brings a slew of new features, improvements, and changes that enhance the developer experience and provide more robust solutions.\nTable of Contents What\u0026rsquo;s New in PHP 8.1? Installing PHP 8.1 Exploring Key Features Getting the Best Out of PHP 8.1 PHP 8.1: A Step Forward What\u0026rsquo;s New in PHP 8.1? PHP 8.1 introduces several new features and improvements, including:\nEnums: A typesafe way of defining a type with a finite set of values. Fibers: A solution for running asynchronous code using synchronous syntax. Never Return Type: Useful for indicating that a function will not return a value. Installing PHP 8.1 To install PHP 8.1 on your system, you can follow these steps:\nWindows Users: Download the PHP 8.1 VC15 x64 Non Thread Safe version from the PHP Downloads page. Mac Users: Use Homebrew by typing brew install php@8.1 in your Terminal. Linux Users: Use the package manager of your distribution to install PHP 8.1. Exploring Key Features Now that PHP 8.1 is installed, let\u0026rsquo;s explore its key features:\nEnums Enums are used to create a type that consists of a finite set of values. Here is an example:\nenum Status: string { case Draft = \u0026#39;draft\u0026#39;; case Published = \u0026#39;published\u0026#39;; case Archived = \u0026#39;archived\u0026#39;; } Fibers Fibers allow developers to write asynchronous code using a more traditional, synchronous coding style. Here\u0026rsquo;s a basic example of how fibers can be used:\n$fiber = new Fiber(function (): void { echo \u0026#34;Running inside the fiber\\n\u0026#34;; }); $fiber-\u0026gt;start(); Never Return Type The never return type is used to indicate that a function does not return. The function either throws an exception or ends the script’s execution. Here is an example:\nfunction redirect(string $url): never { header(\u0026#39;Location: \u0026#39; . $url); exit; } Getting the Best Out of PHP 8.1 To make the most out of PHP 8.1, it\u0026rsquo;s important to follow these best practices:\nStay up to date: Regularly check the official PHP documentation for any changes or updates. Test your code: Always thoroughly test your code when upgrading to a new version of PHP. Leverage new features: Use the new features of PHP 8.1 to enhance the functionality and efficiency of your applications. PHP 8.1: A Step Forward In conclusion, PHP 8.1 offers several powerful features and improvements that make it a worthy upgrade. Its focus on performance, reliability, and developer experience continues to solidify PHP\u0026rsquo;s place as a robust language for web development. Happy coding!\n","permalink":"https://mikeei.github.io/blog/blog_post_2023_07_09_2/","summary":"Unleashing the Power of PHP 8.1: A Comprehensive Guide PHP 8.1, the latest iteration of the PHP language, brings a slew of new features, improvements, and changes that enhance the developer experience and provide more robust solutions.\nTable of Contents What\u0026rsquo;s New in PHP 8.1? Installing PHP 8.1 Exploring Key Features Getting the Best Out of PHP 8.1 PHP 8.1: A Step Forward What\u0026rsquo;s New in PHP 8.1? PHP 8.1 introduces several new features and improvements, including:","title":"Unleashing the Power of PHP 8.1: A Comprehensive Guide"},{"content":"Title: Event Horizon: Celestial Paradox\nIn the wake of the original Event Horizon tragedy, the use of experimental gravity drives was halted. However, as humanity ventured deeper into space, the limitations of conventional space travel became increasingly apparent. Two decades later, under the United Nations Aerospace Command (UNAC), the Project Phoenix was initiated, aiming to safely recreate and control the gravity drive.\nOur protagonist is Dr. Serena Keller, a brilliant quantum physicist whose controversial theories about controlled singularity made Project Phoenix possible. She\u0026rsquo;s skeptical but intrigued when a deep-space probe retrieves an item from the depths of the cosmos: the flight recorder from the Event Horizon, eerily untouched by time or space.\nUpon analyzing the recorder, a chilling detail is revealed: Event Horizon\u0026rsquo;s voyage to the other dimension involved not only space but also time. The gravity drive didn\u0026rsquo;t just bend space, but wove time within it, creating a paradox. The Event Horizon is stuck in a temporal loop, endlessly repeating its doomed voyage.\nWith a hand-picked crew, Keller embarks on a daring mission aboard the Phoenix, the most advanced ship ever built, to retrieve the Event Horizon and end its eternal torment. Among them is Captain John Serrano, a hardened military veteran with a haunted past, providing the muscle and tactical acumen for the mission.\nReaching the coordinates from the flight recorder, they find themselves not just facing the still-living and conscious Event Horizon, but also the echoes of its past and future due to the time loop. They experience glimpses of horrific incidents from Event Horizon\u0026rsquo;s past and potential futures, as the ship continuously cycles through time.\nThe temporal disturbance starts affecting Phoenix\u0026rsquo;s systems, and reality begins to distort. The crew members confront their past and future selves, and paranoia begins to spread as they can\u0026rsquo;t trust even their own senses.\nIn a cerebral twist, Keller realizes that to disrupt the time loop and retrieve the Event Horizon, they must replicate the original conditions of the gravity drive activation, aligning Phoenix\u0026rsquo;s drive with the Event Horizon\u0026rsquo;s temporal frequency. But this move risks putting Phoenix and its crew on the same doomed trajectory.\nAgainst escalating odds, Keller convinces Serrano and the crew to take the leap of faith. As Phoenix\u0026rsquo;s gravity drive activates, time around them warps, throwing them into a nerve-wracking journey through the time loop. They encounter numerous possible outcomes, each more terrifying than the last, before finally reaching the point where they can disrupt the loop.\nIn the climax, Serrano pilots the Phoenix in a daring maneuver, mirroring the original course of the Event Horizon. Keller activates their gravity drive, causing a monumental rupture in the time loop. The Phoenix sustains severe damage, and half the crew is lost, but the loop is broken. The Event Horizon, finally unstuck from time, can be destroyed.\nThe surviving crew returns to our reality, bearing the weight of their lost comrades and the haunting knowledge of the horrors that lie beyond space-time. The Event Horizon\u0026rsquo;s remains drift into a nearby star, ending its nightmare once and for all.\nEvent Horizon: Celestial Paradox presents an atmospheric and intellectual horror, with high-stakes tension, complex characters, and a riveting exploration of the terrifying potential of time manipulation. It stays true to the chilling essence of the original while adding a new dimension of cosmic horror.\nLorem est tota propiore conpellat pectoribus de pectora summo. Redit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","permalink":"https://mikeei.github.io/blog/blog_post_2023_07_05/","summary":"Title: Event Horizon: Celestial Paradox\nIn the wake of the original Event Horizon tragedy, the use of experimental gravity drives was halted. However, as humanity ventured deeper into space, the limitations of conventional space travel became increasingly apparent. Two decades later, under the United Nations Aerospace Command (UNAC), the Project Phoenix was initiated, aiming to safely recreate and control the gravity drive.\nOur protagonist is Dr. Serena Keller, a brilliant quantum physicist whose controversial theories about controlled singularity made Project Phoenix possible.","title":"Post 2023-07-05"},{"content":"With the release of PHP 8.1, the popular server-side scripting language took another significant step forward. This version introduced a range of new features and improvements that enhance the overall performance, security, and coding experience in PHP.\nThe release of PHP 8.1 marked a new era for PHP developers\nAmong the highlights of PHP 8.1 is the introduction of enums, a feature that has long been requested by PHP developers. Enums, or enumerations, allow developers to define a type that has a few preset values, making code more readable and less prone to errors.\nEnums in PHP 8.1\nAnother notable feature in PHP 8.1 is the new readonly properties. This feature allows developers to declare properties that cannot be changed after initialization, providing an additional layer of security and predictability in PHP applications.\nReadonly properties in PHP 8.1\nPHP 8.1 also introduces fibers for handling asynchronous code. While PHP is traditionally synchronous, fibers allow for more efficient handling of I/O-bound PHP code, such as network, database, or file system access.\nFibers in PHP 8.1\nPHP 8.1 is more than just a version update; it represents the PHP community\u0026rsquo;s ongoing commitment to enhance the language\u0026rsquo;s capabilities, usability, and performance. Whether you are an experienced PHP developer or just starting out, PHP 8.1 offers features that can improve your coding experience.\nCoding with PHP 8.1\n","permalink":"https://mikeei.github.io/blog/post_005/","summary":"With the release of PHP 8.1, the popular server-side scripting language took another significant step forward. This version introduced a range of new features and improvements that enhance the overall performance, security, and coding experience in PHP.\nThe release of PHP 8.1 marked a new era for PHP developers\nAmong the highlights of PHP 8.1 is the introduction of enums, a feature that has long been requested by PHP developers. Enums, or enumerations, allow developers to define a type that has a few preset values, making code more readable and less prone to errors.","title":"PHP 8.1: A Leap Forward for PHP Developers"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","permalink":"https://mikeei.github.io/blog/blog_post_2021_09_13/","summary":"\u003cp\u003eLorem est tota propiore conpellat pectoribus de pectora summo.\u003c/p\u003e","title":"Blog_post_2021_09_13"},{"content":"Tanka is a Bootstrap-based minimalist theme for Hugo.\nVik, Iceland. Photo by Adam Jang.\nTypography Follows the Bootstrap typography.\nh1 Heading h2 Heading h3 Heading h4 Heading h5 Heading h6 Heading This is bold text\nThis is bold text\nThis is italic text\nThis is italic text\nDeleted text\nBlock quotes are written like so.\nThey can span multiple paragraphs, if you like.\nSome text, and some code and then a nice plain link with title.\nand then\nCreate a list by starting a line with +, -, or * Sub-lists are made by indenting 2 spaces: Marker character change forces new list start: Ac tristique libero volutpat at Very easy! vs.\nLorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Math Inline formula $S_n = \\sum_{i=1}^n X_i$ example.\n$$S(n, k) = \\frac{1}{k!}\\sum_{i=0}^{k} (-1)^{i} \\binom{k}{i} (k-i)^n.$$\nCode Inline code example\nR library(\u0026#34;msaenet\u0026#34;) dat = msaenet.sim.gaussian( n = 150, p = 500, rho = 0.5, coef = rep(1, 10), snr = 5, p.train = 0.7, seed = 1001 ) msaenet.fit = msaenet( dat$x.tr, dat$y.tr, alphas = seq(0.1, 0.9, 0.1), nsteps = 10L, tune.nsteps = \u0026#34;ebic\u0026#34;, seed = 1005 ) msaenet.fit$best.step msaenet.nzv(msaenet.fit) plot(msaenet.fit, label = TRUE) plot(msaenet.fit, type = \u0026#34;criterion\u0026#34;) plot(msaenet.fit, type = \u0026#34;dotplot\u0026#34;, label = TRUE, label.cex = 1) Python @requires_authorization(roles=[\u0026#34;ADMIN\u0026#34;]) def somefunc(param1=\u0026#39;\u0026#39;, param2=0): r\u0026#39;\u0026#39;\u0026#39;A docstring\u0026#39;\u0026#39;\u0026#39; if param1 \u0026gt; param2: # interesting print \u0026#39;Gre\\\u0026#39;ater\u0026#39; return (param2 - param1 + 1 + 0b10l) or None class SomeClass: pass \u0026gt;\u0026gt;\u0026gt; message = \u0026#39;\u0026#39;\u0026#39;interpreter ... prompt\u0026#39;\u0026#39;\u0026#39; Stan // Multivariate Regression Example // Taken from stan-reference-2.8.0.pdf p.66 data { int\u0026lt;lower=0\u0026gt; N; // num individuals int\u0026lt;lower=1\u0026gt; K; // num ind predictors int\u0026lt;lower=1\u0026gt; J; // num groups int\u0026lt;lower=1\u0026gt; L; // num group predictors int\u0026lt;lower=1,upper=J\u0026gt; jj[N]; // group for individual matrix[N,K] x; // individual predictors row_vector[L] u[J]; // group predictors vector[N] y; // outcomes } parameters { corr_matrix[K] Omega; // prior correlation vector\u0026lt;lower=0\u0026gt;[K] tau; // prior scale matrix[L,K] gamma; // group coeffs vector[K] beta[J]; // indiv coeffs by group real\u0026lt;lower=0\u0026gt; sigma; // prediction error scale } model { tau ~ cauchy(0,2.5); Omega ~ lkj_corr(2); to_vector(gamma) ~ normal(0, 5); { row_vector[K] u_gamma[J]; for (j in 1:J) u_gamma[j] \u0026lt;- u[j] * gamma; beta ~ multi_normal(u_gamma, quad_form_diag(Omega, tau)); } { vector[N] x_beta_jj; for (n in 1:N) x_beta_jj[n] \u0026lt;- x[n] * beta[jj[n]]; y ~ normal(x_beta_jj, sigma); } } # Note: Octothorpes indicate comments, too! ","permalink":"https://mikeei.github.io/blog/hugo-tanka-theme-demo/","summary":"Tanka is a Bootstrap-based minimalist theme for Hugo.\nVik, Iceland. Photo by Adam Jang.\nTypography Follows the Bootstrap typography.\nh1 Heading h2 Heading h3 Heading h4 Heading h5 Heading h6 Heading This is bold text\nThis is bold text\nThis is italic text\nThis is italic text\nDeleted text\nBlock quotes are written like so.\nThey can span multiple paragraphs, if you like.\nSome text, and some code and then a nice plain link with title.","title":"Tanka Theme Demo"},{"content":"Some useful Bootstrap 4 components are listed below.\nButtons Primary Secondary Success Danger Warning Info Light Dark\nPrimary Secondary Success Danger Warning Info Light Dark\nAlerts This is a primary alert—check it out! This is a secondary alert—check it out! This is a success alert—check it out! This is a danger alert—check it out! This is a warning alert—check it out! This is a info alert—check it out! This is a light alert—check it out! This is a dark alert—check it out! Tables # First Last Handle 1 Mark Otto @mdo 2 Jacob Thornton @fat 3 Larry the Bird @twitter Forms Email address Example select 1 2 3 4 5 Example multiple select 1 2 3 4 5 Example textarea ","permalink":"https://mikeei.github.io/blog/bootstrap/","summary":"Some useful Bootstrap 4 components are listed below.\nButtons Primary Secondary Success Danger Warning Info Light Dark\nPrimary Secondary Success Danger Warning Info Light Dark\nAlerts This is a primary alert—check it out! This is a secondary alert—check it out! This is a success alert—check it out! This is a danger alert—check it out! This is a warning alert—check it out! This is a info alert—check it out! This is a light alert—check it out!","title":"Bootstrap 4 Components"},{"content":"Lorem ipsum dolor sit amet, ex has sale ullum corrumpit, sea dicam nostrum sensibus ad. Porro tritani persecuti te sed. Omittam dissentias pro ex. Atqui luptatum duo id. Eros minim eam ex, novum elitr accusam quo in. Nec ne audire euripidis, mea qualisque consetetur cu. Suspendisse volutpat sem a risus euismod convallis.\nIn modus congue feugait eos. In nec nonumy volutpat corrumpit, sea assentior quaerendum no, cum affert scripta ea. No nihil voluptaria pro. Erat democritum mei no, homero quodsi aliquando id mel, ridens civibus molestiae et nam.\nEa eam postea facilisi. Nullam forensibus consequuntur usu ea, no ius consul delectus periculis. Eam veri numquam an. Et partiendo gubergren eam. Quod iudicabit has ex, eam diam facilisi eu, elitr aliquip no eum.\n","permalink":"https://mikeei.github.io/about/","summary":"Lorem ipsum dolor sit amet, ex has sale ullum corrumpit, sea dicam nostrum sensibus ad. Porro tritani persecuti te sed. Omittam dissentias pro ex. Atqui luptatum duo id. Eros minim eam ex, novum elitr accusam quo in. Nec ne audire euripidis, mea qualisque consetetur cu. Suspendisse volutpat sem a risus euismod convallis.\nIn modus congue feugait eos. In nec nonumy volutpat corrumpit, sea assentior quaerendum no, cum affert scripta ea. No nihil voluptaria pro.","title":"About Hugo Tanka"},{"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nIn modus congue feugait eos. In nec nonumy volutpat corrumpit, sea assentior quaerendum no, cum affert scripta ea. No nihil voluptaria pro. Erat democritum mei no, homero quodsi aliquando id mel, ridens civibus molestiae et nam.\nEa eam postea facilisi. Nullam forensibus consequuntur usu ea, no ius consul delectus periculis. Eam veri numquam an. Et partiendo gubergren eam. Quod iudicabit has ex, eam diam facilisi eu, elitr aliquip no eum.\n","permalink":"https://mikeei.github.io/blog/long-title/","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nIn modus congue feugait eos.","title":"Detour Sign and the Man in the Neon Coat, Got the Flashlight, Got the Moonlight, Swimming in the Blue Light"}]