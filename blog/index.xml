<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Blog on Mikeei Blog</title>
    <link>https://mikeei.github.io/blog/</link>
    <description>Recent content in Blog on Mikeei Blog</description>
    <image>
      <title>Mikeei Blog</title>
      <url>https://mikeei.github.io/papermod-cover.png</url>
      <link>https://mikeei.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 25 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://mikeei.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Event Horizon: A Deep Dive Into the Unknown</title>
      <link>https://mikeei.github.io/blog/post_001/</link>
      <pubDate>Tue, 25 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mikeei.github.io/blog/post_001/</guid>
      <description>An exploration into the intriguing sci-fi horror film Event Horizon.</description>
      <content:encoded><![CDATA[<p>In 1997, a sci-fi horror film by the name of &lsquo;Event Horizon&rsquo; found its way into the cinemas. Directed by Paul W. S. Anderson, the film features an ensemble cast including Laurence Fishburne, Sam Neill, Kathleen Quinlan, and Joely Richardson, among others.</p>
<p><img loading="lazy" src="https://m.media-amazon.com/images/M/MV5BNjVkYjM1ZTUtMTIxNi00ZTIzLWEyMGMtNGVhZjJiOTUzZTViXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_.jpg" alt="Event Horizon Cast"  />

<em>The cast of Event Horizon</em></p>
<p>The narrative focuses on a crew aboard the rescue vessel Lewis and Clark, sent to investigate the reappearance of the Event Horizon, a ship that had mysteriously vanished seven years prior. Once they board the ghost ship, however, the crew begins to experience horrific hallucinations and realize they&rsquo;ve discovered something far more terrifying than they could have imagined.</p>
<p><img loading="lazy" src="https://m.media-amazon.com/images/M/MV5BN2I3NWIzZWQtZjgwYS00ZDQ1LTg0MmQtMzhiNzJlMGE3Zjg0XkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_.jpg" alt="Event Horizon Ship"  />

<em>The mysterious ship Event Horizon</em></p>
<p>&lsquo;Event Horizon&rsquo; is a mesh of dark, gripping horror and complex, thought-provoking science fiction. It&rsquo;s a film that asks its viewers to confront the unknown and ponder the vast, often terrifying, possibilities of space and the human mind.</p>
<p>For more details about &lsquo;Event Horizon,&rsquo; you can visit its <a href="https://www.imdb.com/title/tt0119081/">IMDb page</a>.</p>
<p><img loading="lazy" src="https://m.media-amazon.com/images/M/MV5BMTYxNDA0MDQ5OV5BMl5BanBnXkFtZTgwOTU4OTQ0MDE@._V1_.jpg" alt="Event Horizon IMDb"  />

<em>IMDb poster of Event Horizon</em></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Aliens: An Unforgettable Sci-Fi Horror Sequel</title>
      <link>https://mikeei.github.io/blog/post_002/</link>
      <pubDate>Mon, 24 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mikeei.github.io/blog/post_002/</guid>
      <description>Delving into the action-packed and fear-inducing world of James Cameron&amp;#39;s Aliens.</description>
      <content:encoded><![CDATA[<p>Back in 1986, James Cameron released &lsquo;Aliens,&rsquo; the much-anticipated sequel to Ridley Scott&rsquo;s 1979 film &lsquo;Alien.&rsquo; Drawing upon the original&rsquo;s raw, heart-pounding horror, &lsquo;Aliens&rsquo; combined it with Cameron&rsquo;s signature knack for action to create an unforgettable cinematic experience.</p>
<p><img loading="lazy" src="https://m.media-amazon.com/images/M/MV5BZDc2YjVmMzUtYjE1MS00MDU4LTg5YWQtYmVmN2ZiZjcyNmFhXkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_.jpg" alt="Aliens Movie"  />

<em>Aliens in action</em></p>
<p>Starring Sigourney Weaver reprising her role as Ellen Ripley, &lsquo;Aliens&rsquo; follows our resilient heroine as she is awakened 57 years after narrowly escaping the predatory Alien in the first film. Convinced to join a mission to check on a colony of humans on the Exomoon LV-426, where the crew of the Nostromo first encountered the Alien eggs, Ripley finds herself once again in the midst of a nightmare.</p>
<p><img loading="lazy" src="https://m.media-amazon.com/images/M/MV5BODc3YWY1NDYtNmY4NC00NDAxLTljNjgtNWMzNTM2OGY4NmU4XkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_.jpg" alt="Ripley in Aliens"  />

<em>Ripley, prepared for battle</em></p>
<p>&lsquo;Aliens&rsquo; thrives on its ability to build suspense and deliver gut-wrenching action sequences. Each scene is meticulously crafted to ratchet up the tension, leading to a nail-biting finale that cements Ripley&rsquo;s status as one of cinema&rsquo;s greatest action heroes.</p>
<p><img loading="lazy" src="https://m.media-amazon.com/images/M/MV5BODJiNmUzYmQtZTNhNS00NjY0LThmMzUtZmNhYTVmOTJmNjNlXkEyXkFqcGdeQXVyNTAyODkwOQ@@._V1_.jpg" alt="Aliens Action Scene"  />

<em>An intense scene from Aliens</em></p>
<p>What truly sets &lsquo;Aliens&rsquo; apart, however, is its deeper exploration of Ripley&rsquo;s character. Despite the ceaseless action and horror, the film finds time to delve into Ripley&rsquo;s psyche, offering a poignant look at her struggle with PTSD from her previous encounter with the Alien and the maternal bond she forms with a young girl named Newt.</p>
<p><img loading="lazy" src="https://m.media-amazon.com/images/M/MV5BMjg2Mzc3NjY4N15BMl5BanBnXkFtZTgwODQ0OTI2MzE@._V1_.jpg" alt="Ripley and Newt"  />

<em>Ripley and Newt form a powerful bond</em></p>
<p>&lsquo;Aliens&rsquo; is more than just a sequel. It is a masterclass in filmmaking that seamlessly blends sci-fi, horror, and action into a compelling narrative that sticks with you long after the credits roll.</p>
<p>For more details about &lsquo;Aliens,&rsquo; you can visit its <a href="https://www.imdb.com/title/tt0090605/">IMDb page</a>.</p>
<p><img loading="lazy" src="https://m.media-amazon.com/images/M/MV5BZGU2OGY5ZTYtMWNhYy00NjZiLWI0NjUtZmNhY2JhNDRmODU3XkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_.jpg" alt="Aliens IMDb"  />

<em>IMDb poster of Aliens</em></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Alien: Resurrection - Reinventing The Horror</title>
      <link>https://mikeei.github.io/blog/post_003/</link>
      <pubDate>Sat, 22 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mikeei.github.io/blog/post_003/</guid>
      <description>Investigating the bold twists and turns of the fourth film in the Alien franchise.</description>
      <content:encoded><![CDATA[<p>In 1997, fans of the Alien franchise were treated to a new addition to the saga: &lsquo;Alien: Resurrection.&rsquo; Directed by French filmmaker Jean-Pierre Jeunet, the film dared to tread new ground with its unique blend of horror, action, and dark humor.</p>
<p><img loading="lazy" src="https://picsum.photos/600" alt="Alien: Resurrection Movie"  />

<em>Alien: Resurrection in action</em></p>
<p>Two hundred years after the events of &lsquo;Alien 3,&rsquo; &lsquo;Alien: Resurrection&rsquo; sees the return of Ellen Ripley (Sigourney Weaver), who is brought back to life as a human-Alien hybrid clone through a successful scientific experiment. Alongside her, a group of mercenaries find themselves aboard the Auriga, where they must fight for survival against a new generation of Xenomorphs.</p>
<p><img loading="lazy" src="https://picsum.photos/600" alt="Ripley in Alien: Resurrection"  />

<em>Ripley, reborn and stronger than ever</em></p>
<p>Despite its divergence from the earlier films&rsquo; tones, &lsquo;Alien: Resurrection&rsquo; contains numerous scenes that hark back to the franchise&rsquo;s horror roots. There are suspenseful chase scenes, claustrophobic settings, and gruesome alien encounters that will satisfy longtime fans.</p>
<p><img loading="lazy" src="https://picsum.photos/600" alt="Alien: Resurrection Action Scene"  />

<em>An intense scene from Alien: Resurrection</em></p>
<p>One of the movie&rsquo;s key elements is its exploration of Ripley&rsquo;s character. As a clone, she possesses enhanced strength and reflexes, and an empathic link with the Aliens. Her struggle with her identity and humanity adds an intriguing layer to the narrative.</p>
<p><img loading="lazy" src="https://picsum.photos/600" alt="Ripley and Alien"  />

<em>Ripley shares a complex relationship with the Aliens</em></p>
<p>&lsquo;Alien: Resurrection&rsquo; is a film that takes risks, breathing new life into the franchise with its distinct style and narrative choices. Despite the mixed reviews, the movie has found its audience among those who appreciate its dark humor and unique take on the series&rsquo; lore.</p>
<p>For more details about &lsquo;Alien: Resurrection,&rsquo; you can visit its <a href="https://www.imdb.com/title/tt0118583/">IMDb page</a>.</p>
<p><img loading="lazy" src="https://picsum.photos/600" alt="Alien: Resurrection IMDb"  />

<em>IMDb poster of Alien: Resurrection</em></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Alien 5: The Next Chapter in Extraterrestrial Horror</title>
      <link>https://mikeei.github.io/blog/post_004/</link>
      <pubDate>Fri, 21 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mikeei.github.io/blog/post_004/</guid>
      <description>Speculating about the exciting potential of the yet-to-be-realized Alien 5.</description>
      <content:encoded><![CDATA[<p>With four gripping films in the Alien franchise, fans around the world have been speculating and hoping for an &lsquo;Alien 5.&rsquo; As of now, the film exists only in the realm of imagination, but that won&rsquo;t stop us from exploring its potential.</p>
<p><img loading="lazy" src="https://picsum.photos/600" alt="Imaginary Alien 5 Movie"  />

<em>The imagined Alien 5 in action</em></p>
<p>If &lsquo;Alien 5&rsquo; were to come to fruition, there&rsquo;s no telling where the story could go. One possibility is the return of Ellen Ripley (Sigourney Weaver) in some form, continuing the trend set by &lsquo;Alien: Resurrection.&rsquo; With her complex relationship with the Xenomorphs, Ripley&rsquo;s involvement would ensure a compelling narrative.</p>
<p><img loading="lazy" src="https://picsum.photos/600" alt="Ripley in Imagined Alien 5"  />

<em>Imagined Ripley in Alien 5</em></p>
<p>The film could also delve deeper into the Xenomorphs&rsquo; origins and their home world, a concept touched upon in &lsquo;Prometheus&rsquo; and &lsquo;Alien: Covenant.&rsquo; This exploration could provide a fresh perspective on the aliens and the franchise as a whole.</p>
<p><img loading="lazy" src="https://picsum.photos/600" alt="Imagined Alien World"  />

<em>The imagined home world of the Xenomorphs</em></p>
<p>A new installment could mean new characters and dynamics as well. This could introduce a whole new generation of fans to the horrors and excitement of the Alien universe.</p>
<p><img loading="lazy" src="https://picsum.photos/600" alt="New Characters in Imagined Alien 5"  />

<em>New faces in the imagined Alien 5</em></p>
<p>While &lsquo;Alien 5&rsquo; remains speculative, the enduring popularity of the franchise assures that the desire for more content isn&rsquo;t going away anytime soon. We can only hope that our speculations align with what&rsquo;s to come.</p>
<p><img loading="lazy" src="https://picsum.photos/600" alt="Imaginary Alien 5 Poster"  />

<em>Imagined IMDb poster of Alien 5</em></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>CSS: Styling the Web</title>
      <link>https://mikeei.github.io/blog/post_006/</link>
      <pubDate>Thu, 20 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mikeei.github.io/blog/post_006/</guid>
      <description>Exploring the impact and essential elements of Cascading Style Sheets (CSS) in web development.</description>
      <content:encoded><![CDATA[<p>CSS, short for Cascading Style Sheets, is a style sheet language used for describing the look and formatting of a document written in HTML. From typography to layout, CSS is a fundamental tool for web development.</p>
<p><img loading="lazy" src="https://picsum.photos/810" alt="CSS Banner"  />

<em>CSS: Making the web beautiful</em></p>
<p>CSS&rsquo;s main benefit is that it allows developers to separate the website&rsquo;s content (HTML) from its presentation (CSS). This separation can improve content accessibility, provide more flexibility and control in the specification of presentation characteristics, and reduce complexity and repetition in the structural content.</p>
<p><img loading="lazy" src="https://picsum.photos/815" alt="HTML CSS"  />

<em>The symbiotic relationship between HTML and CSS</em></p>
<p>One of CSS&rsquo;s core features is the ability to control the layout of multiple web pages all at once. By changing one CSS file, you can modify the look of an entire website. This ability makes CSS an incredibly efficient tool for maintaining large sites.</p>
<p><img loading="lazy" src="https://picsum.photos/620" alt="CSS Styling"  />

<em>CSS at work, styling multiple pages at once</em></p>
<p>CSS is also responsive, which means it can ensure that web pages look good on devices of all sizes. With features like media queries, you can create different layouts for different screen sizes.</p>
<p><img loading="lazy" src="https://picsum.photos/670" alt="Responsive CSS"  />

<em>Responsive design with CSS</em></p>
<p>In conclusion, CSS is a crucial part of web development that allows developers to create visually engaging and efficient websites. Whether you&rsquo;re just starting your web development journey or you&rsquo;re a seasoned developer, a solid understanding of CSS is essential.</p>
<p><img loading="lazy" src="https://picsum.photos/690" alt="CSS Code"  />

<em>Writing CSS code for a website</em></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Make Your Own PCBs with a 3D Printer</title>
      <link>https://mikeei.github.io/blog/blog_post_2023_07_10_2/</link>
      <pubDate>Mon, 10 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mikeei.github.io/blog/blog_post_2023_07_10_2/</guid>
      <description>A comprehensive guide on how to make your own PCBs at home using a 3D printer.</description>
      <content:encoded><![CDATA[<p><img loading="lazy" src="https://i.ibb.co/K0HVPBd/paper-mod-profilemode.png" alt="PCB"  />
</p>
<h1 id="make-your-own-pcbs-with-a-3d-printer">Make Your Own PCBs with a 3D Printer</h1>
<p><em>Conceived on Feb 14, 2020</em><br>
<em>Series: sideprojects, cad, hardware</em></p>
<p>Listen, anyone can make a PCB at home, it’s easy. All you need is a laser printer, some glossy magazine pages, print your circuit onto the page, use a clothes iron to transfer the toner onto your copper clad, if that doesn’t work use some water and some lacquer or something, I don’t know, I stopped reading at that point because the last time I saw a laser printer, a magazine and a clothes iron was in the nineties.</p>
<p>Until recently, the only ways I knew to make PCBs was to practice the dark art above, to pay $10 and wait three weeks to get professional-looking PCBs from China, or to pay $60 and wait three days to get professional-looking PCBs from Europe. It was “cheap, fast, actually doable by a human person, choose two”.</p>
<p>That always bugged me, it shouldn’t be like that, I have always been of the opinion that there shouldn’t be things you can’t make when you have a 3D printer, but PCBs have consistently eluded me. I yearned for them, I wanted to be able to make them at home, but it seemed impossible.</p>
<p>One day, everything changed.</p>
<h2 id="that-one-day-when-everything-changed">That One Day When Everything Changed</h2>
<p>One day, I thought it would be fun to mount a pen onto my 3D printer and got it to draw stuff on paper. If you don’t know how a 3D printer works, now would be a good time to skim my 3D printer primer, but in summary a 3D printer cuts an object into 2D slices and prints them on top of each other.</p>
<p>If I could take just one of these slices and tell the printer to print higher, then the nozzle wouldn’t be touching the bed, I could mount the pen lower and put a piece of paper under it, and it would draw on the paper. Getting the printing software (called a slicer) to create a 3-dimensional shape out of a photo was easy, as you can just import a drawing and it will automatically convert it to a solid.</p>
<p>I rubber-banded a Sharpie onto a holder I quickly designed, and, a few lines of code later, my printer produced this gem (excuse quality of potato):</p>
<p><img loading="lazy" src="https://www.stavros.io/posts/paper-drawing-small.jpg" alt="Paper Drawing"  />
</p>
<p>I felt so proud of the completely useless thing I had created, I immediately ran to share it everywhere. A friend saw it on Twitter and replied that this was a good way to make PCBs.</p>
<p>I was immediately intrigued.</p>
<h2 id="making-pcbs-with-markers">Making PCBs with Markers</h2>
<p>Apparently, all that black magic about printing and transferring and magazines and lacquer above is just a way to keep the etching acid from dissolving the copper. You see, when you’re etching a PCB, you’re basically getting acid to dissolve the copper on your copper clad (the blank PCB). Except, you’re putting something (toner) over the copper on the parts you want to keep, so the acid can’t get to it, which leaves you with copper traces.</p>
<p>It turns out you don’t really need to do all that stuff with the toner and printer, since you can cover the copper much more easily just by drawing over it with a permanent, waterproof marker (I used an Edding 140 S 0.3mm). I had inadvertently created a plotter, which can be used for painting a circuit onto a PCB.</p>
<p><img loading="lazy" src="https://www.stavros.io/posts/copper-small.jpg" alt="Copper"  />
</p>
<p>I rushed to dig out the files for one of my old, small PCBs, which you can see on the right, and ran it through my improved drawing process. I had the printer draw it on paper, just to see what it would end up looking like, and the results were pretty encouraging.</p>
<p>The paper somewhat absorbed the ink, as paper is wont to do, so there was some seepage, but overall the results looked like they should definitely work on copper. This is that first attempt:</p>
<p><img loading="lazy" src="https://www.stavros.io/posts/drawn-small.jpg" alt="Drawn"  />
</p>
<p>This looked very promising.</p>
<h2 id="the-improved-drawing-process">The Improved Drawing Process</h2>
<p>The original process (where I exported stuff to an image and then converted the image to a 3D model with the slicer) worked well enough, but it was meant for working with 3D models, not circuits. As such, it could sometimes lose accuracy, which doesn’t really matter if you’re printing a figurine, but does matter if it means your circuit is no longer working.</p>
<p>Fortunately, there is an excellent open source project called pcb2gcode, which converts Gerber files to Gcode for various CAD tools to execute it. The Gcode that pcb2gcode outputs wasn’t compatible with my Marlin-style printer, so I adapted my script from above to turn the output to something my printer can run.</p>
<p>My script does various things:</p>
<ol>
<li>It removes commands that are incompatible with or unsafe to run on my printer (e.g. drilling commands, as it has no drill, temperature and extrusion commands, as I don’t want it to heat up or extrude, etc).</li>
<li>It rewrites comments so that they are compatible with my printer (pcb2gcode comments use parentheses, my printer uses semicolons).</li>
<li>It makes sure all movements are within some specified coordinates, so the print head can’t go too low or too high by mistake.</li>
<li>It allows me to offset all drawing commands by some distance, so I can print exactly where I want to.</li>
</ol>
<p>Unfortunately, as you can see on the photo of the paper drawing above, pcb2gcode has a bug where traces that are too narrow disappear, but the author is actively working on it and I worked around it in the mean time just by setting a lower marker tip diameter.</p>
<p>Once everything was done on the programming side, and with lots of help from my friend Andrew, it was time to actually try and draw on copper. Here’s a video of the attempt:</p>
<p>[Drawing a PCB on Copper Clad Video Link]</p>
<h2 id="etching">Etching</h2>
<p>Surprisingly (and as my friend Josh rubbed in with what I imagine to be considerable glee), the actual etching part wasn’t as easy as I thought. It wasn’t hard, but it also didn’t consist of just throwing the PCB in acid and waiting.</p>
<p>I’m still in a trial-and-error phase, as I’ve only etched two PCBs, but it seems like 100 grams of water with the appropriate amount of sodium persulfate dissolved in it is only good enough to etch a tiny PCB. If that’s true, it will take a lot of acid to etch a larger one, but I’ll have to experiment and see what happens.</p>
<p>UPDATE: Some commenters on HN pointed out that the reason this took so long was that I didn’t have a copper plane. I decided against that</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Why We Replaced Firecracker with QEMU</title>
      <link>https://mikeei.github.io/blog/blog_post_2023_07_10/</link>
      <pubDate>Mon, 10 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mikeei.github.io/blog/blog_post_2023_07_10/</guid>
      <description>An in-depth comparison of Firecracker and QEMU, and why we chose to switch from Firecracker to QEMU for Hocus.</description>
      <content:encoded><![CDATA[<p><img loading="lazy" src="https://hocus.dev/blog/img/hocus-logo-with-text.png" alt="Hocus Logo"  />
</p>
<h1 id="why-we-replaced-firecracker-with-qemu">Why We Replaced Firecracker with QEMU</h1>
<p><em>July 10, 2023</em><br>
<em>Hugo Dutka</em><br>
<em>Co-founder at Hocus</em></p>
<p>Firecracker, the microVM hypervisor, is renowned for being lightweight, fast, and secure. It&rsquo;s excellent for running short-lived workloads, which is why it&rsquo;s the backbone of AWS Lambda. Our initial prototype for Hocus, a self-hosted alternative to Gitpod and GitHub Codespaces, utilized Firecracker. However, after weeks of testing, we decided to entirely replace it with QEMU. A little-known fact about Firecracker is its lack of support for many modern hypervisor features, such as dynamic RAM management, which is vital for long-lived workloads. In this post, I will explain why Firecracker might not be the best hypervisor choice and when you should avoid it.</p>
<h2 id="firecracker-optimizes-for-short-lived-workloads">Firecracker Optimizes for Short-Lived Workloads</h2>
<p>The creators of Firecracker state that:</p>
<blockquote>
<p>&ldquo;Firecracker has a minimalist design. It excludes unnecessary devices and guest-facing functionality to reduce the memory footprint and attack surface area of each microVM.&rdquo;</p>
</blockquote>
<p>The term &ldquo;unnecessary&rdquo; is intriguing - if this functionality is unnecessary, why was it incorporated into other hypervisors? The definition of &ldquo;unnecessary&rdquo; must be understood in the context of what Firecracker was built for. These excluded features are unnecessary for AWS Lambda, which spins up VMs to run short function calls and then shuts them down. If you&rsquo;re running a different kind of workload, like a VM that contains your development environment or a self-hosted GitHub Actions agent, these features cease to be unnecessary. Your VM will run for hours, days, or even months without stopping, unlike the typical Firecracker VM, which runs for seconds or minutes.</p>
<h2 id="firecracker-not-so-lightweight-after-all">Firecracker, Not So Lightweight After All</h2>
<p>Here are the two most significant features Firecracker lacks:</p>
<ol>
<li>Dynamic memory management - Firecracker&rsquo;s RAM footprint starts low, but once a workload inside allocates RAM, Firecracker will never return it to the host system. After running several workloads inside, you end up with an idling VM that consumes 32 GB of RAM on the host, even though it doesn&rsquo;t need any of it.</li>
<li>Discard operations on storage - if you create a 10 GB file inside a VM and then delete it, the backing space won&rsquo;t be reclaimed on the host. The VM will occupy that disk space until you delete the entire VM drive.</li>
</ol>
<p>These deficiencies make Firecracker a memory and disk space hog. The plot below shows the memory usage of the same memory-intensive workload running in QEMU and Firecracker virtual machines.</p>
<p><img loading="lazy" src="/images/vm-mem-usage-ae3ffeb0cc6a2df2f662597c653d9bf4.png" alt="QEMU vs Firecracker VM Memory Usage"  />
</p>
<p>The workload in Firecracker finishes running around the 200-second mark, and in QEMU around the 250-second mark. It&rsquo;s not a performance difference; it&rsquo;s just when I manually stopped them.</p>
<h2 id="other-features-firecracker-is-missing">Other Features Firecracker Is Missing</h2>
<ul>
<li>GPU support - if you need a GPU inside the VM, you have to pick a different hypervisor.</li>
<li>High-performance disk IO - when you connect multiple drives to the VM and run intensive IO operations, you will likely run into a bottleneck. Firecracker uses a virtio-blk implementation that isn’t as memory-hungry as alternatives, but has a smaller throughput.</li>
</ul>
<h2 id="qemu-is-not-perfect-though">QEMU is Not Perfect Though</h2>
<p>The main issue we&rsquo;ve had with QEMU is that it has too many options you need to configure. For instance, enabling your VM to return unused RAM to the host requires at least three challenging tasks:</p>
<ol>
<li>Knowing that the feature even exists (it&rsquo;s called free page reporting and you have to specifically enable it in QEMU)</li>
<li>Understanding that an obscure feature of Linux called DAMON exists, knowing what it&rsquo;s for, knowing how to configure it, and compiling a guest Linux kernel that supports it</li>
<li>Knowing that you need to disable transparent huge pages on the guest, otherwise the VM will never return large amounts of memory</li>
</ol>
<p>It took us two months of experimentation, reading through the source code of Firecracker, QEMU, and other hypervisors to develop a reliable QEMU proof of concept. To comprehend DAMON configuration, my co-founder spent days running benchmarks and conversing with one of its authors. It&rsquo;s great that we could talk and we are grateful that the author spent the time to help us, but it shows that the technology is not easily accessible yet.</p>
<h2 id="conclusion">Conclusion</h2>
<p>QEMU has the features you need to run general-purpose workloads, but configuring it requires a lot of time and patience. If you want to run short-lived, untrusted workloads, Firecracker is a great choice. However, if you just want to run your development environment in a VM, you can use Hocus. We&rsquo;ve done all the hard work for you already. It&rsquo;s still in alpha, but you can already check it out on <a href="https://github.com/hocus-dev">GitHub</a>.</p>
<p><em>Tags: qemu, firecracker</em></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Hugo: The Speedy Static Site Generator</title>
      <link>https://mikeei.github.io/blog/blog_post_2023_07_09/</link>
      <pubDate>Sun, 09 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mikeei.github.io/blog/blog_post_2023_07_09/</guid>
      <description>A comprehensive guide on getting started with Hugo, the powerful and fast static site generator.</description>
      <content:encoded><![CDATA[<h1 id="hugo-the-speedy-static-site-generator">Hugo: The Speedy Static Site Generator</h1>
<p><img loading="lazy" src="https://raw.githubusercontent.com/gohugoio/hugo/master/docs/static/img/hugo-logo.png" alt="Hugo Logo"  />
</p>
<p>Hugo is an open-source static site generator that provides a robust framework for creating and managing websites. Its main benefit is speed; it can generate pages in milliseconds, allowing you to quickly see changes and build your site faster.</p>
<h2 id="table-of-contents">Table of Contents</h2>
<ol>
<li><a href="#why-choose-hugo">Why Choose Hugo?</a></li>
<li><a href="#installation">Installation</a></li>
<li><a href="#getting-started">Getting Started with Hugo</a></li>
<li><a href="#customizing-your-site">Customizing Your Site</a></li>
<li><a href="#deploying-your-site">Deploying Your Site</a></li>
</ol>
<h2 id="why-choose-hugo">Why Choose Hugo?</h2>
<p>With many static site generators available, you might wonder, <em>why choose Hugo?</em> Here are a few reasons:</p>
<ul>
<li><strong>Speed:</strong> Hugo takes pride in being one of the fastest static site generators.</li>
<li><strong>Flexibility:</strong> Hugo supports a wide range of site configurations and themes.</li>
<li><strong>Ease of Use:</strong> It uses a simple directory structure and does not require a lot of technical expertise.</li>
</ul>
<table>
<thead>
<tr>
<th>Feature</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>Speed</td>
<td>Pages generate in milliseconds.</td>
</tr>
<tr>
<td>Flexibility</td>
<td>Supports a wide range of site configurations and themes.</td>
</tr>
<tr>
<td>Ease of Use</td>
<td>Uses a simple directory structure.</td>
</tr>
</tbody>
</table>
<p><img loading="lazy" src="https://raw.githubusercontent.com/gohugoio/hugo/master/docs/static/img/hugo-logo.png" alt="Hugo Logo"  />
</p>
<h2 id="installation">Installation</h2>
<p>Before we dive into the process of creating a site with Hugo, you need to install it on your computer. Follow these steps:</p>
<ol>
<li><strong>Windows Users:</strong> Download the latest release from the <a href="https://github.com/gohugoio/hugo/releases">Hugo releases page on GitHub</a>.</li>
<li><strong>Mac Users:</strong> Use Homebrew by typing <code>brew install hugo</code> in your Terminal.</li>
<li><strong>Linux Users:</strong> Use the Snap package manager by typing <code>sudo snap install hugo</code> in the Terminal.</li>
</ol>
<h2 id="getting-started-with-hugo">Getting Started with Hugo</h2>
<p>Now that you have Hugo installed, let&rsquo;s start building our website!</p>
<ol>
<li><strong>Create a new site:</strong> Use the command <code>hugo new site [site_name]</code> where <code>[site_name]</code> is the name of your website. This will create a new directory with your site name.</li>
<li><strong>Navigate to your new site directory:</strong> Use the command <code>cd [site_name]</code> to move into your new site directory.</li>
<li><strong>Add a theme:</strong> Visit the <a href="https://themes.gohugo.io/">Hugo themes directory</a>, select a theme you like, and follow the instructions to add it to your site.</li>
</ol>
<p>At this point, you have a basic Hugo site with a theme ready to go!</p>
<h2 id="customizing-your-site">Customizing Your Site</h2>
<p>Customizing your site is where the <em>real fun</em> begins. Here&rsquo;s how you can add content and customize your site:</p>
<ol>
<li><strong>Add new content:</strong> Use the command <code>hugo new [section]/[your_filename].md</code> to create new content. For example, <code>hugo new posts/my-first-post.md</code>.</li>
<li><strong>Customize the layout:</strong> You can customize the layout of your site by modifying the theme files in the <code>layouts</code> directory.</li>
<li><strong>Customize the look:</strong> Modify the CSS files in the <code>static/css</code> directory to change the look of your site.</li>
</ol>
<p>Remember, every change you make can be viewed instantly because of Hugo&rsquo;s speed!</p>
<h2 id="deploying-your-site">Deploying Your Site</h2>
<p>Once your site is ready, you can deploy it using various methods such as GitHub Pages, Netlify, or even your own custom server.</p>
<p>Here&rsquo;s a simple way to deploy your site using GitHub Pages:</p>
<ol>
<li><strong>Create a new repository:</strong> Create a new repository on GitHub.</li>
<li><strong>Initialize your site directory as a Git repository:</strong> Use the command <code>git init</code>.</li>
<li><strong>Add your site&rsquo;s files to the Git repository:</strong> Use <code>git add .</code> and then <code>git commit -m &quot;first commit&quot;</code>.</li>
<li><strong>Push your site&rsquo;s files to your GitHub repository:</strong> Use <code>git remote add origin [your_repository_url]</code> and then <code>git push -u origin master</code>.</li>
</ol>
<p>Voila! Your site is now live and can be accessed at <code>https://[your_github_username].github.io/[your_repository_name]</code>.</p>
<hr>
<p>In conclusion, Hugo is a powerful tool for creating fast, customizable static websites. It&rsquo;s an excellent choice for blogs, portfolios, and other types of websites. Happy coding!</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unleashing the Power of PHP 8.1: A Comprehensive Guide</title>
      <link>https://mikeei.github.io/blog/blog_post_2023_07_09_2/</link>
      <pubDate>Sun, 09 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mikeei.github.io/blog/blog_post_2023_07_09_2/</guid>
      <description>Discover the features and improvements in PHP 8.1 and how to make the most out of them.</description>
      <content:encoded><![CDATA[<h1 id="unleashing-the-power-of-php-81-a-comprehensive-guide">Unleashing the Power of PHP 8.1: A Comprehensive Guide</h1>
<p><img loading="lazy" src="https://www.php.net/images/logos/php-logo.svg" alt="PHP 8.1 Logo"  />
</p>
<p>PHP 8.1, the latest iteration of the PHP language, brings a slew of new features, improvements, and changes that enhance the developer experience and provide more robust solutions.</p>
<h2 id="table-of-contents">Table of Contents</h2>
<ol>
<li><a href="#whats-new">What&rsquo;s New in PHP 8.1?</a></li>
<li><a href="#installing-php-8-1">Installing PHP 8.1</a></li>
<li><a href="#key-features">Exploring Key Features</a></li>
<li><a href="#best-practices">Getting the Best Out of PHP 8.1</a></li>
<li><a href="#conclusion">PHP 8.1: A Step Forward</a></li>
</ol>
<h2 id="whats-new">What&rsquo;s New in PHP 8.1?</h2>
<p>PHP 8.1 introduces several new features and improvements, including:</p>
<ul>
<li><strong>Enums:</strong> A typesafe way of defining a type with a finite set of values.</li>
<li><strong>Fibers:</strong> A solution for running asynchronous code using synchronous syntax.</li>
<li><strong>Never Return Type:</strong> Useful for indicating that a function will not return a value.</li>
</ul>
<h2 id="installing-php-8-1">Installing PHP 8.1</h2>
<p>To install PHP 8.1 on your system, you can follow these steps:</p>
<ol>
<li><strong>Windows Users:</strong> Download the PHP 8.1 VC15 x64 Non Thread Safe version from the <a href="https://windows.php.net/download">PHP Downloads page</a>.</li>
<li><strong>Mac Users:</strong> Use Homebrew by typing <code>brew install php@8.1</code> in your Terminal.</li>
<li><strong>Linux Users:</strong> Use the package manager of your distribution to install PHP 8.1.</li>
</ol>
<h2 id="key-features">Exploring Key Features</h2>
<p>Now that PHP 8.1 is installed, let&rsquo;s explore its key features:</p>
<h3 id="enums">Enums</h3>
<p>Enums are used to create a type that consists of a finite set of values. Here is an example:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">enum</span> <span class="nx">Status</span><span class="o">:</span> <span class="nx">string</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">case</span> <span class="nx">Draft</span> <span class="o">=</span> <span class="s1">&#39;draft&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">case</span> <span class="nx">Published</span> <span class="o">=</span> <span class="s1">&#39;published&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">case</span> <span class="nx">Archived</span> <span class="o">=</span> <span class="s1">&#39;archived&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="fibers">Fibers</h3>
<p>Fibers allow developers to write asynchronous code using a more traditional, synchronous coding style. Here&rsquo;s a basic example of how fibers can be used:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$fiber</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Fiber</span><span class="p">(</span><span class="k">function</span> <span class="p">()</span><span class="o">:</span> <span class="nx">void</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;Running inside the fiber</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$fiber</span><span class="o">-&gt;</span><span class="na">start</span><span class="p">();</span>
</span></span></code></pre></div><h3 id="never-return-type">Never Return Type</h3>
<p>The never return type is used to indicate that a function does not return. The function either throws an exception or ends the script’s execution. Here is an example:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">function</span> <span class="nf">redirect</span><span class="p">(</span><span class="nx">string</span> <span class="nv">$url</span><span class="p">)</span><span class="o">:</span> <span class="nx">never</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">header</span><span class="p">(</span><span class="s1">&#39;Location: &#39;</span> <span class="o">.</span> <span class="nv">$url</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">exit</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h2 id="best-practices">Getting the Best Out of PHP 8.1</h2>
<p>To make the most out of PHP 8.1, it&rsquo;s important to follow these best practices:</p>
<ul>
<li><strong>Stay up to date:</strong> Regularly check the official PHP documentation for any changes or updates.</li>
<li><strong>Test your code:</strong> Always thoroughly test your code when upgrading to a new version of PHP.</li>
<li><strong>Leverage new features:</strong> Use the new features of PHP 8.1 to enhance the functionality and efficiency of your applications.</li>
</ul>
<h2 id="conclusion">PHP 8.1: A Step Forward</h2>
<p>In conclusion, PHP 8.1 offers several powerful features and improvements that make it a worthy upgrade. Its focus on performance, reliability, and developer experience continues to solidify PHP&rsquo;s place as a robust language for web development. Happy coding!</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Post 2023-07-05</title>
      <link>https://mikeei.github.io/blog/blog_post_2023_07_05/</link>
      <pubDate>Wed, 05 Jul 2023 01:05:48 +0000</pubDate>
      
      <guid>https://mikeei.github.io/blog/blog_post_2023_07_05/</guid>
      <description>Iubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux.
Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit
possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.</description>
      <content:encoded><![CDATA[<p>Title: Event Horizon: Celestial Paradox</p>
<p>In the wake of the original Event Horizon tragedy, the use of experimental gravity drives was halted. However, as humanity ventured deeper into space, the limitations of conventional space travel became increasingly apparent. Two decades later, under the United Nations Aerospace Command (UNAC), the Project Phoenix was initiated, aiming to safely recreate and control the gravity drive.</p>
<p>Our protagonist is Dr. Serena Keller, a brilliant quantum physicist whose controversial theories about controlled singularity made Project Phoenix possible. She&rsquo;s skeptical but intrigued when a deep-space probe retrieves an item from the depths of the cosmos: the flight recorder from the Event Horizon, eerily untouched by time or space.</p>
<p>Upon analyzing the recorder, a chilling detail is revealed: Event Horizon&rsquo;s voyage to the other dimension involved not only space but also time. The gravity drive didn&rsquo;t just bend space, but wove time within it, creating a paradox. The Event Horizon is stuck in a temporal loop, endlessly repeating its doomed voyage.</p>
<p>With a hand-picked crew, Keller embarks on a daring mission aboard the Phoenix, the most advanced ship ever built, to retrieve the Event Horizon and end its eternal torment. Among them is Captain John Serrano, a hardened military veteran with a haunted past, providing the muscle and tactical acumen for the mission.</p>
<p>Reaching the coordinates from the flight recorder, they find themselves not just facing the still-living and conscious Event Horizon, but also the echoes of its past and future due to the time loop. They experience glimpses of horrific incidents from Event Horizon&rsquo;s past and potential futures, as the ship continuously cycles through time.</p>
<p>The temporal disturbance starts affecting Phoenix&rsquo;s systems, and reality begins to distort. The crew members confront their past and future selves, and paranoia begins to spread as they can&rsquo;t trust even their own senses.</p>
<p>In a cerebral twist, Keller realizes that to disrupt the time loop and retrieve the Event Horizon, they must replicate the original conditions of the gravity drive activation, aligning Phoenix&rsquo;s drive with the Event Horizon&rsquo;s temporal frequency. But this move risks putting Phoenix and its crew on the same doomed trajectory.</p>
<p>Against escalating odds, Keller convinces Serrano and the crew to take the leap of faith. As Phoenix&rsquo;s gravity drive activates, time around them warps, throwing them into a nerve-wracking journey through the time loop. They encounter numerous possible outcomes, each more terrifying than the last, before finally reaching the point where they can disrupt the loop.</p>
<p>In the climax, Serrano pilots the Phoenix in a daring maneuver, mirroring the original course of the Event Horizon. Keller activates their gravity drive, causing a monumental rupture in the time loop. The Phoenix sustains severe damage, and half the crew is lost, but the loop is broken. The Event Horizon, finally unstuck from time, can be destroyed.</p>
<p>The surviving crew returns to our reality, bearing the weight of their lost comrades and the haunting knowledge of the horrors that lie beyond space-time. The Event Horizon&rsquo;s remains drift into a nearby star, ending its nightmare once and for all.</p>
<p>Event Horizon: Celestial Paradox presents an atmospheric and intellectual horror, with high-stakes tension, complex characters, and a riveting exploration of the terrifying potential of time manipulation. It stays true to the chilling essence of the original while adding a new dimension of cosmic horror.</p>
<p>Lorem est tota propiore conpellat pectoribus de pectora summo.
<img loading="lazy" src="https://images.unsplash.com/photo-1677019441252-b702d717e4f0" alt="image"  />

Redit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.</p>
<ol>
<li>Exierant elisi ambit vivere dedere</li>
<li>Duce pollice</li>
<li>Eris modo</li>
<li>Spargitque ferrea quos palude</li>
</ol>
<p>Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.</p>
<ol>
<li>Comas hunc haec pietate fetum procerum dixit</li>
<li>Post torum vates letum Tiresia</li>
<li>Flumen querellas</li>
<li>Arcanaque montibus omnes</li>
<li>Quidem et</li>
</ol>
<h1 id="vagus-elidunt">Vagus elidunt</h1>
<p><svg class="canon" xmlns="http://www.w3.org/2000/svg" overflow="visible" viewBox="0 0 496 373" height="373" width="496"><g fill="none"><path stroke="#000" stroke-width=".75" d="M.599 372.348L495.263 1.206M.312.633l494.95 370.853M.312 372.633L247.643.92M248.502.92l246.76 370.566M330.828 123.869V1.134M330.396 1.134L165.104 124.515"></path><path stroke="#ED1C24" stroke-width=".75" d="M275.73 41.616h166.224v249.05H275.73zM54.478 41.616h166.225v249.052H54.478z"></path><path stroke="#000" stroke-width=".75" d="M.479.375h495v372h-495zM247.979.875v372"></path><ellipse cx="498.729" cy="177.625" rx=".75" ry="1.25"></ellipse><ellipse cx="247.229" cy="377.375" rx=".75" ry="1.25"></ellipse></g></svg></p>
<p><img loading="lazy" src="https://raw.github.com/specialorange/FDXCM/master/doc/controllers_brief.svg" alt="image"  />
</p>
<p><a href="https://en.wikipedia.org/wiki/Canons_of_page_construction#Van_de_Graaf_canon">The Van de Graaf Canon</a></p>
<h2 id="mane-refeci-capiebant-unda-mulcebat">Mane refeci capiebant unda mulcebat</h2>
<p>Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. <strong>Faces illo pepulere</strong> tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.</p>
<p>Iubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.</p>
<p><img loading="lazy" src="https://images.unsplash.com/photo-1677019441252-b702d717e4f0" alt="image"  />
</p>
<p>Eurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel <strong>mitis temploque</strong> vocatus, inque alis, <em>oculos nomen</em> non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides <strong>parte</strong>.</p>

<style>
.canon { background: white; width: 100%; height: auto; }
</style>

]]></content:encoded>
    </item>
    
    <item>
      <title>PHP 8.1: A Leap Forward for PHP Developers</title>
      <link>https://mikeei.github.io/blog/post_005/</link>
      <pubDate>Mon, 15 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mikeei.github.io/blog/post_005/</guid>
      <description>Exploring the exciting new features and improvements introduced in PHP 8.1.</description>
      <content:encoded><![CDATA[<p>With the release of PHP 8.1, the popular server-side scripting language took another significant step forward. This version introduced a range of new features and improvements that enhance the overall performance, security, and coding experience in PHP.</p>
<p><img loading="lazy" src="https://picsum.photos/635" alt="PHP 8.1 Release"  />

<em>The release of PHP 8.1 marked a new era for PHP developers</em></p>
<p>Among the highlights of PHP 8.1 is the introduction of enums, a feature that has long been requested by PHP developers. Enums, or enumerations, allow developers to define a type that has a few preset values, making code more readable and less prone to errors.</p>
<p><img loading="lazy" src="https://picsum.photos/730" alt="PHP Enums"  />

<em>Enums in PHP 8.1</em></p>
<p>Another notable feature in PHP 8.1 is the new readonly properties. This feature allows developers to declare properties that cannot be changed after initialization, providing an additional layer of security and predictability in PHP applications.</p>
<p><img loading="lazy" src="https://picsum.photos/700" alt="Readonly Properties"  />

<em>Readonly properties in PHP 8.1</em></p>
<p>PHP 8.1 also introduces fibers for handling asynchronous code. While PHP is traditionally synchronous, fibers allow for more efficient handling of I/O-bound PHP code, such as network, database, or file system access.</p>
<p><img loading="lazy" src="https://picsum.photos/820" alt="Fibers in PHP"  />

<em>Fibers in PHP 8.1</em></p>
<p>PHP 8.1 is more than just a version update; it represents the PHP community&rsquo;s ongoing commitment to enhance the language&rsquo;s capabilities, usability, and performance. Whether you are an experienced PHP developer or just starting out, PHP 8.1 offers features that can improve your coding experience.</p>
<p><img loading="lazy" src="https://picsum.photos/875" alt="PHP 8.1 Coding"  />

<em>Coding with PHP 8.1</em></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Blog_post_2021_09_13</title>
      <link>https://mikeei.github.io/blog/blog_post_2021_09_13/</link>
      <pubDate>Sun, 12 Sep 2021 22:05:48 +0000</pubDate>
      
      <guid>https://mikeei.github.io/blog/blog_post_2021_09_13/</guid>
      <description>&lt;p&gt;Lorem est tota propiore conpellat pectoribus de pectora summo.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Lorem est tota propiore conpellat pectoribus de pectora summo.</p>
<p>Redit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.</p>
<ol>
<li>Exierant elisi ambit vivere dedere</li>
<li>Duce pollice</li>
<li>Eris modo</li>
<li>Spargitque ferrea quos palude</li>
</ol>
<p>Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.</p>
<ol>
<li>Comas hunc haec pietate fetum procerum dixit</li>
<li>Post torum vates letum Tiresia</li>
<li>Flumen querellas</li>
<li>Arcanaque montibus omnes</li>
<li>Quidem et</li>
</ol>
<h1 id="vagus-elidunt">Vagus elidunt</h1>
<p><svg class="canon" xmlns="http://www.w3.org/2000/svg" overflow="visible" viewBox="0 0 496 373" height="373" width="496"><g fill="none"><path stroke="#000" stroke-width=".75" d="M.599 372.348L495.263 1.206M.312.633l494.95 370.853M.312 372.633L247.643.92M248.502.92l246.76 370.566M330.828 123.869V1.134M330.396 1.134L165.104 124.515"></path><path stroke="#ED1C24" stroke-width=".75" d="M275.73 41.616h166.224v249.05H275.73zM54.478 41.616h166.225v249.052H54.478z"></path><path stroke="#000" stroke-width=".75" d="M.479.375h495v372h-495zM247.979.875v372"></path><ellipse cx="498.729" cy="177.625" rx=".75" ry="1.25"></ellipse><ellipse cx="247.229" cy="377.375" rx=".75" ry="1.25"></ellipse></g></svg></p>
<img src="https://raw.github.com/specialorange/FDXCM/master/doc/controllers_brief.svg">
<p><a href="https://en.wikipedia.org/wiki/Canons_of_page_construction#Van_de_Graaf_canon">The Van de Graaf Canon</a></p>
<h2 id="mane-refeci-capiebant-unda-mulcebat">Mane refeci capiebant unda mulcebat</h2>
<p>Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. <strong>Faces illo pepulere</strong> tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.</p>
<p>Iubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.</p>
<p>Eurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel <strong>mitis temploque</strong> vocatus, inque alis, <em>oculos nomen</em> non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides <strong>parte</strong>.</p>

<style>
.canon { background: white; width: 100%; height: auto; }
</style>]]></content:encoded>
    </item>
    
    <item>
      <title>Tanka Theme Demo</title>
      <link>https://mikeei.github.io/blog/hugo-tanka-theme-demo/</link>
      <pubDate>Sat, 21 Nov 2020 12:00:00 +0000</pubDate>
      
      <guid>https://mikeei.github.io/blog/hugo-tanka-theme-demo/</guid>
      <description>Tanka is a Bootstrap-based minimalist theme for Hugo.
Vik, Iceland. Photo by Adam Jang.
Typography Follows the Bootstrap typography.
h1 Heading h2 Heading h3 Heading h4 Heading h5 Heading h6 Heading This is bold text
This is bold text
This is italic text
This is italic text
Deleted text
Block quotes are written like so.
They can span multiple paragraphs, if you like.
Some text, and some code and then a nice plain link with title.</description>
      <content:encoded><![CDATA[<p><a href="https://github.com/nanxstats/hugo-tanka">Tanka</a> is a Bootstrap-based minimalist theme for Hugo.</p>
<div class="figure">
<p><img loading="lazy" src="/images/example.jpg" alt=""  />
</p>
<p class="caption">Vik, Iceland. Photo by <a href="https://unsplash.com/photos/MLKrf51NV8w">Adam Jang</a>.</p>
</div>
<h2 id="typography">Typography</h2>
<p>Follows the Bootstrap typography.</p>
<h1 id="h1-heading">h1 Heading</h1>
<h2 id="h2-heading">h2 Heading</h2>
<h3 id="h3-heading">h3 Heading</h3>
<h4 id="h4-heading">h4 Heading</h4>
<h5 id="h5-heading">h5 Heading</h5>
<h6 id="h6-heading">h6 Heading</h6>
<hr>
<p><strong>This is bold text</strong></p>
<p><strong>This is bold text</strong></p>
<p><em>This is italic text</em></p>
<p><em>This is italic text</em></p>
<p><del>Deleted text</del></p>
<blockquote>
<p>Block quotes are
written like so.</p>
<p>They can span multiple paragraphs,
if you like.</p>
</blockquote>
<p>Some text, and some <code>code</code> and then a nice plain <a href="https://nanx.me" title="title text!">link with title</a>.</p>
<p>and then</p>
<ul>
<li>Create a list by starting a line with <code>+</code>, <code>-</code>, or <code>*</code></li>
<li>Sub-lists are made by indenting 2 spaces:
<ul>
<li>Marker character change forces new list start:
<ul>
<li>Ac tristique libero volutpat at</li>
</ul>
</li>
</ul>
</li>
<li>Very easy!</li>
</ul>
<p>vs.</p>
<ol>
<li>Lorem ipsum dolor sit amet</li>
<li>Consectetur adipiscing elit</li>
<li>Integer molestie lorem at massa</li>
</ol>
<h2 id="math">Math</h2>
<p>Inline formula <code>$S_n = \sum_{i=1}^n X_i$</code> example.</p>
<p>$$S(n, k) = \frac{1}{k!}\sum_{i=0}^{k} (-1)^{i} \binom{k}{i} (k-i)^n.$$</p>
<h2 id="code">Code</h2>
<p>Inline <code>code</code> example</p>
<h3 id="r">R</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">library</span><span class="p">(</span><span class="s">&#34;msaenet&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">dat</span> <span class="o">=</span> <span class="nf">msaenet.sim.gaussian</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="n">n</span> <span class="o">=</span> <span class="m">150</span><span class="p">,</span> <span class="n">p</span> <span class="o">=</span> <span class="m">500</span><span class="p">,</span> <span class="n">rho</span> <span class="o">=</span> <span class="m">0.5</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="n">coef</span> <span class="o">=</span> <span class="nf">rep</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">10</span><span class="p">),</span> <span class="n">snr</span> <span class="o">=</span> <span class="m">5</span><span class="p">,</span> <span class="n">p.train</span> <span class="o">=</span> <span class="m">0.7</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="n">seed</span> <span class="o">=</span> <span class="m">1001</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">msaenet.fit</span> <span class="o">=</span> <span class="nf">msaenet</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="n">dat</span><span class="o">$</span><span class="n">x.tr</span><span class="p">,</span> <span class="n">dat</span><span class="o">$</span><span class="n">y.tr</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="n">alphas</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0.1</span><span class="p">,</span> <span class="m">0.9</span><span class="p">,</span> <span class="m">0.1</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">  <span class="n">nsteps</span> <span class="o">=</span> <span class="m">10L</span><span class="p">,</span> <span class="n">tune.nsteps</span> <span class="o">=</span> <span class="s">&#34;ebic&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="n">seed</span> <span class="o">=</span> <span class="m">1005</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">msaenet.fit</span><span class="o">$</span><span class="n">best.step</span>
</span></span><span class="line"><span class="cl"><span class="nf">msaenet.nzv</span><span class="p">(</span><span class="n">msaenet.fit</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">msaenet.fit</span><span class="p">,</span> <span class="n">label</span> <span class="o">=</span> <span class="kc">TRUE</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">msaenet.fit</span><span class="p">,</span> <span class="n">type</span> <span class="o">=</span> <span class="s">&#34;criterion&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">msaenet.fit</span><span class="p">,</span> <span class="n">type</span> <span class="o">=</span> <span class="s">&#34;dotplot&#34;</span><span class="p">,</span> <span class="n">label</span> <span class="o">=</span> <span class="kc">TRUE</span><span class="p">,</span> <span class="n">label.cex</span> <span class="o">=</span> <span class="m">1</span><span class="p">)</span>
</span></span></code></pre></div><h3 id="python">Python</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="nd">@requires_authorization</span><span class="p">(</span><span class="n">roles</span><span class="o">=</span><span class="p">[</span><span class="s2">&#34;ADMIN&#34;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">somefunc</span><span class="p">(</span><span class="n">param1</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="n">param2</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="sa">r</span><span class="s1">&#39;&#39;&#39;A docstring&#39;&#39;&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">param1</span> <span class="o">&gt;</span> <span class="n">param2</span><span class="p">:</span> <span class="c1"># interesting</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span> <span class="s1">&#39;Gre</span><span class="se">\&#39;</span><span class="s1">ater&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="p">(</span><span class="n">param2</span> <span class="o">-</span> <span class="n">param1</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">+</span> <span class="mb">0b10</span><span class="n">l</span><span class="p">)</span> <span class="ow">or</span> <span class="kc">None</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">SomeClass</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">pass</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="n">message</span> <span class="o">=</span> <span class="s1">&#39;&#39;&#39;interpreter
</span></span></span><span class="line"><span class="cl"><span class="s1">... prompt&#39;&#39;&#39;</span>
</span></span></code></pre></div><h3 id="stan">Stan</h3>
<pre tabindex="0"><code class="language-stan" data-lang="stan">// Multivariate Regression Example
// Taken from stan-reference-2.8.0.pdf p.66

data {
  int&lt;lower=0&gt; N;             // num individuals
  int&lt;lower=1&gt; K;             // num ind predictors
  int&lt;lower=1&gt; J;             // num groups
  int&lt;lower=1&gt; L;             // num group predictors
  int&lt;lower=1,upper=J&gt; jj[N]; // group for individual
  matrix[N,K] x;              // individual predictors
  row_vector[L] u[J];         // group predictors
  vector[N] y;                // outcomes
}
parameters {
  corr_matrix[K] Omega;       // prior correlation
  vector&lt;lower=0&gt;[K] tau;     // prior scale
  matrix[L,K] gamma;          // group coeffs
  vector[K] beta[J];          // indiv coeffs by group
  real&lt;lower=0&gt; sigma;        // prediction error scale
}
model {
  tau ~ cauchy(0,2.5);
  Omega ~ lkj_corr(2);
  to_vector(gamma) ~ normal(0, 5);
  {
    row_vector[K] u_gamma[J];
    for (j in 1:J)
      u_gamma[j] &lt;- u[j] * gamma;
    beta ~ multi_normal(u_gamma, quad_form_diag(Omega, tau));
  }
  {
    vector[N] x_beta_jj;
    for (n in 1:N)
      x_beta_jj[n] &lt;- x[n] * beta[jj[n]];
    y ~ normal(x_beta_jj, sigma);
  }
}

# Note: Octothorpes indicate comments, too!
</code></pre>]]></content:encoded>
    </item>
    
    <item>
      <title>Bootstrap 4 Components</title>
      <link>https://mikeei.github.io/blog/bootstrap/</link>
      <pubDate>Fri, 20 Nov 2020 09:00:00 +0000</pubDate>
      
      <guid>https://mikeei.github.io/blog/bootstrap/</guid>
      <description>Some useful Bootstrap 4 components are listed below.
Buttons Primary Secondary Success Danger Warning Info Light Dark
Primary Secondary Success Danger Warning Info Light Dark
Alerts This is a primary alert—check it out! This is a secondary alert—check it out! This is a success alert—check it out! This is a danger alert—check it out! This is a warning alert—check it out! This is a info alert—check it out! This is a light alert—check it out!</description>
      <content:encoded><![CDATA[<p>Some useful Bootstrap 4 components are listed below.</p>
<h2 id="buttons">Buttons</h2>
<p><button type="button" class="btn btn-primary">Primary</button>
<button type="button" class="btn btn-secondary">Secondary</button>
<button type="button" class="btn btn-success">Success</button>
<button type="button" class="btn btn-danger">Danger</button>
<button type="button" class="btn btn-warning">Warning</button>
<button type="button" class="btn btn-info">Info</button>
<button type="button" class="btn btn-light">Light</button>
<button type="button" class="btn btn-dark">Dark</button></p>
<p><button type="button" class="btn btn-outline-primary">Primary</button>
<button type="button" class="btn btn-outline-secondary">Secondary</button>
<button type="button" class="btn btn-outline-success">Success</button>
<button type="button" class="btn btn-outline-danger">Danger</button>
<button type="button" class="btn btn-outline-warning">Warning</button>
<button type="button" class="btn btn-outline-info">Info</button>
<button type="button" class="btn btn-outline-light">Light</button>
<button type="button" class="btn btn-outline-dark">Dark</button></p>
<h2 id="alerts">Alerts</h2>
<div class="alert alert-primary" role="alert">
This is a primary alert—check it out!
</div>
<div class="alert alert-secondary" role="alert">
This is a secondary alert—check it out!
</div>
<div class="alert alert-success" role="alert">
This is a success alert—check it out!
</div>
<div class="alert alert-danger" role="alert">
This is a danger alert—check it out!
</div>
<div class="alert alert-warning" role="alert">
This is a warning alert—check it out!
</div>
<div class="alert alert-info" role="alert">
This is a info alert—check it out!
</div>
<div class="alert alert-light" role="alert">
This is a light alert—check it out!
</div>
<div class="alert alert-dark" role="alert">
This is a dark alert—check it out!
</div>
<h2 id="tables">Tables</h2>
<table class="table table-hover">
<thead>
<tr>
<th scope="col">#</th>
<th scope="col">First</th>
<th scope="col">Last</th>
<th scope="col">Handle</th>
</tr>
</thead>
<tbody>
<tr>
<th scope="row">1</th>
<td>Mark</td>
<td>Otto</td>
<td>@mdo</td>
</tr>
<tr>
<th scope="row">2</th>
<td>Jacob</td>
<td>Thornton</td>
<td>@fat</td>
</tr>
<tr>
<th scope="row">3</th>
<td colspan="2">Larry the Bird</td>
<td>@twitter</td>
</tr>
</tbody>
</table>
<h2 id="forms">Forms</h2>
<form>
<div class="form-group">
<label for="exampleFormControlInput1">Email address</label>
<input type="email" class="form-control" id="exampleFormControlInput1" placeholder="name@example.com">
</div>
<div class="form-group">
<label for="exampleFormControlSelect1">Example select</label>
<select class="form-control" id="exampleFormControlSelect1">
<option>1</option>
<option>2</option>
<option>3</option>
<option>4</option>
<option>5</option>
</select>
</div>
<div class="form-group">
<label for="exampleFormControlSelect2">Example multiple select</label>
<select multiple class="form-control" id="exampleFormControlSelect2">
<option>1</option>
<option>2</option>
<option>3</option>
<option>4</option>
<option>5</option>
</select>
</div>
<div class="form-group">
<label for="exampleFormControlTextarea1">Example textarea</label>
<textarea class="form-control" id="exampleFormControlTextarea1" rows="3"></textarea>
</div>
</form>
]]></content:encoded>
    </item>
    
    <item>
      <title>Detour Sign and the Man in the Neon Coat, Got the Flashlight, Got the Moonlight, Swimming in the Blue Light</title>
      <link>https://mikeei.github.io/blog/long-title/</link>
      <pubDate>Fri, 22 Jan 2016 09:00:00 +0000</pubDate>
      
      <guid>https://mikeei.github.io/blog/long-title/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
In modus congue feugait eos.</description>
      <content:encoded><![CDATA[<p><strong>Lorem ipsum</strong> dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore <em>magna aliqua</em>. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
<p>In modus congue feugait eos. In nec nonumy volutpat corrumpit, sea assentior quaerendum no, cum affert scripta ea. No nihil voluptaria pro. <a href="https://example.com">Erat democritum mei no</a>, homero quodsi aliquando id mel, ridens civibus molestiae et nam.</p>
<p>Ea eam postea facilisi. Nullam forensibus consequuntur usu ea, no ius consul delectus periculis. Eam veri numquam an. Et partiendo gubergren eam. Quod iudicabit has ex, eam diam facilisi eu, elitr aliquip no eum.</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
